# ADMUX独立部署 Makefile

.PHONY: help build-adx build-tracking deploy-monitoring clean-adx clean-tracking clean-monitoring deploy-all clean-all

# 颜色定义
GREEN := \033[0;32m
YELLOW := \033[1;33m
NC := \033[0m

help: ## 显示部署帮助
	@echo "$(GREEN)ADMUX独立部署工具$(NC)"
	@echo ""
	@echo "ADX服务器:"
	@echo "  build-adx      构建ADX服务器镜像"
	@echo "  run-adx        运行ADX服务器"
	@echo "  stop-adx       停止ADX服务器"
	@echo "  logs-adx       查看ADX服务器日志"
	@echo "  clean-adx      清理ADX服务器"
	@echo ""
	@echo "Tracking服务器:"
	@echo "  build-tracking 构建Tracking服务器镜像"
	@echo "  run-tracking   运行Tracking服务器"
	@echo "  stop-tracking  停止Tracking服务器"
	@echo "  logs-tracking  查看Tracking服务器日志"
	@echo "  clean-tracking 清理Tracking服务器"
	@echo ""
	@echo "监控服务:"
	@echo "  deploy-monitoring  部署监控服务"
	@echo "  stop-monitoring     停止监控服务"
	@echo "  logs-monitoring     查看监控服务日志"
	@echo "  clean-monitoring    清理监控服务"
	@echo ""
	@echo "批量操作:"
	@echo "  build-all      构建所有服务镜像"
	@echo "  deploy-all     部署所有服务"
	@echo "  stop-all       停止所有服务"
	@echo "  clean-all      清理所有服务"
	@echo ""
	@echo "健康检查:"
	@echo "  health         检查所有服务状态"

# ADX服务器
build-adx: ## 构建ADX服务器镜像
	@echo "$(YELLOW)构建ADX服务器...$(NC)"
	cd deployments/adxserver && ./build.sh

run-adx: ## 运行ADX服务器
	@echo "$(YELLOW)启动ADX服务器...$(NC)"
	docker run -d --name admux-adx-server \
		-p 8080:8080 \
		-e RUN_TYPE=test \
		--restart unless-stopped \
		admux/adx-server:latest
	@echo "$(GREEN)ADX服务器已启动: http://localhost:8080$(NC)"

stop-adx: ## 停止ADX服务器
	@echo "$(YELLOW)停止ADX服务器...$(NC)"
	docker stop admux-adx-server 2>/dev/null || true
	docker rm admux-adx-server 2>/dev/null || true

logs-adx: ## 查看ADX服务器日志
	docker logs -f admux-adx-server

clean-adx: stop-adx ## 清理ADX服务器
	@echo "$(YELLOW)清理ADX服务器...$(NC)"
	docker rmi admux/adx-server:latest 2>/dev/null || true

# Tracking服务器
build-tracking: ## 构建Tracking服务器镜像
	@echo "$(YELLOW)构建Tracking服务器...$(NC)"
	cd deployments/trackingserver && ./build.sh

run-tracking: ## 运行Tracking服务器
	@echo "$(YELLOW)启动Tracking服务器...$(NC)"
	docker run -d --name admux-tracking-server \
		-p 8081:8081 \
		-e RUN_TYPE=test \
		--restart unless-stopped \
		admux/tracking-server:latest
	@echo "$(GREEN)Tracking服务器已启动: http://localhost:8081$(NC)"

stop-tracking: ## 停止Tracking服务器
	@echo "$(YELLOW)停止Tracking服务器...$(NC)"
	docker stop admux-tracking-server 2>/dev/null || true
	docker rm admux-tracking-server 2>/dev/null || true

logs-tracking: ## 查看Tracking服务器日志
	docker logs -f admux-tracking-server

clean-tracking: stop-tracking ## 清理Tracking服务器
	@echo "$(YELLOW)清理Tracking服务器...$(NC)"
	docker rmi admux/tracking-server:latest 2>/dev/null || true

# 监控服务
deploy-monitoring: ## 部署监控服务
	@echo "$(YELLOW)部署监控服务...$(NC)"
	cd deployments/monitoring && docker-compose up -d
	@echo "$(GREEN)监控服务已启动:$(NC)"
	@echo "  Prometheus: http://localhost:9090"
	@echo "  Grafana: http://localhost:3000 (admin/admin)"

stop-monitoring: ## 停止监控服务
	@echo "$(YELLOW)停止监控服务...$(NC)"
	cd deployments/monitoring && docker-compose down

logs-monitoring: ## 查看监控服务日志
	cd deployments/monitoring && docker-compose logs -f

clean-monitoring: stop-monitoring ## 清理监控服务
	@echo "$(YELLOW)清理监控服务...$(NC)"
	cd deployments/monitoring && docker-compose down -v
	docker system prune -f

# 批量操作
build-all: build-adx build-tracking ## 构建所有服务镜像
	@echo "$(GREEN)所有服务镜像构建完成$(NC)"

deploy-all: deploy-monitoring run-adx run-tracking ## 部署所有服务
	@echo "$(GREEN)所有服务部署完成$(NC)"
	@echo "访问地址:"
	@echo "  ADX服务器: http://localhost:8080"
	@echo "  Tracking服务器: http://localhost:8081"
	@echo "  Prometheus: http://localhost:9090"
	@echo "  Grafana: http://localhost:3000"

stop-all: stop-adx stop-tracking stop-monitoring ## 停止所有服务
	@echo "$(GREEN)所有服务已停止$(NC)"

clean-all: clean-adx clean-tracking clean-monitoring ## 清理所有服务
	@echo "$(GREEN)所有服务已清理$(NC)"

# 健康检查
health: ## 检查所有服务状态
	@echo "$(YELLOW)检查服务状态...$(NC)"
	@echo "ADX服务器:"
	@curl -f http://localhost:8080/health 2>/dev/null && echo "  ✓ 健康" || echo "  ✗ 异常"
	@echo "Tracking服务器:"
	@curl -f http://localhost:8081/health 2>/dev/null && echo "  ✓ 健康" || echo "  ✗ 异常"
	@echo "监控服务:"
	@curl -f http://localhost:9090/-/healthy 2>/dev/null && echo "  ✓ 健康" || echo "  ✗ 异常"
	@curl -f http://localhost:3000/api/health 2>/dev/null && echo "  ✓ 健康" || echo "  ✗ 异常"

# 快速启动
quick-start: build-all deploy-all ## 快速启动所有服务
	@echo "$(YELLOW)等待服务启动...$(NC)"
	sleep 10
	$(MAKE) health
	@echo "$(GREEN)快速启动完成！$(NC)"