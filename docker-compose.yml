version: '3.8'

services:
  # Redis服务
  redis:
    image: redis:7-alpine
    container_name: admux-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./configs/redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - admux-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # ADX主服务
  adx-server:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        VERSION: dev
        BUILD_TIME: ${BUILD_TIME:-}
        GIT_COMMIT: ${GIT_COMMIT:-}
    container_name: admux-adx-server
    ports:
      - "8080:8080"
    environment:
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=info
      - SERVER_PORT=8080
      - CONFIG_PATH=/app/configs
      - LOG_PATH=/app/logs
      - TZ=Asia/Shanghai
    volumes:
      - ./configs:/app/configs:ro
      - ./logs:/app/logs
      - ./data:/app/data
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - admux-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # 监控服务 - Prometheus
  prometheus:
    image: prom/prometheus:v2.47.0
    container_name: admux-prometheus
    ports:
      - "9090:9090"
    volumes:
      - prometheus_data:/prometheus
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=15d'
      - '--web.enable-lifecycle'
    networks:
      - admux-network
    restart: unless-stopped

  # 监控服务 - Grafana
  grafana:
    image: grafana/grafana:10.1.0
    container_name: admux-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=redis-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
    depends_on:
      - prometheus
    networks:
      - admux-network
    restart: unless-stopped

  # Nginx负载均衡器（可选）
  nginx:
    image: nginx:alpine
    container_name: admux-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deployments/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./deployments/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./deployments/nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - adx-server
    networks:
      - admux-network
    restart: unless-stopped
    profiles:
      - production

volumes:
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  admux-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16